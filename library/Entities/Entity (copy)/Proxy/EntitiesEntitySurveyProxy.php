<?php

namespace Entities\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntitiesEntitySurveyProxy extends \Entities\Entity\Survey implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function __get($property)
    {
        $this->_load();
        return parent::__get($property);
    }

    public function __set($property, $value)
    {
        $this->_load();
        return parent::__set($property, $value);
    }

    public function getModel($id, $model)
    {
        $this->_load();
        return parent::getModel($id, $model);
    }

    public function setUpdateDate()
    {
        $this->_load();
        return parent::setUpdateDate();
    }

    public function setGoodToGoDate()
    {
        $this->_load();
        return parent::setGoodToGoDate();
    }

    public function logSurvey()
    {
        $this->_load();
        return parent::logSurvey();
    }

    public function setSurveyStatus($status)
    {
        $this->_load();
        return parent::setSurveyStatus($status);
    }

    public function setPriority($status)
    {
        $this->_load();
        return parent::setPriority($status);
    }

    public function setInstallation($status)
    {
        $this->_load();
        return parent::setInstallation($status);
    }

    public function setInsulationTime($status)
    {
        $this->_load();
        return parent::setInsulationTime($status);
    }

    public function setSurveyLlHh($status)
    {
        $this->_load();
        return parent::setSurveyLlHh($status);
    }

    public function setUser($status)
    {
        $this->_load();
        return parent::setUser($status);
    }

    public function setInstaller($installer)
    {
        $this->_load();
        return parent::setInstaller($installer);
    }

    public function setJobStatus($job)
    {
        $this->_load();
        return parent::setJobStatus($job);
    }

    public function setPaymentStatus($paymentStatus)
    {
        $this->_load();
        return parent::setPaymentStatus($paymentStatus);
    }

    public function setSubmittedDate($value)
    {
        $this->_load();
        return parent::setSubmittedDate($value);
    }

    public function setInstallationDate($value)
    {
        $this->_load();
        return parent::setInstallationDate($value);
    }

    public function setPaymentDate($value)
    {
        $this->_load();
        return parent::setPaymentDate($value);
    }

    public function setSendDate($value)
    {
        $this->_load();
        return parent::setSendDate($value);
    }

    public function getSubmittedDate()
    {
        $this->_load();
        return parent::getSubmittedDate();
    }

    public function getPaymentDate()
    {
        $this->_load();
        return parent::getPaymentDate();
    }

    public function getInstallationDate()
    {
        $this->_load();
        return parent::getInstallationDate();
    }

    public function getCreatedDate()
    {
        $this->_load();
        return parent::getCreatedDate();
    }

    public function getUpdatedDate()
    {
        $this->_load();
        return parent::getUpdatedDate();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'hno', 'postcode', 'address', 'benefit', 'telNumber', 'mobileNumber', 'submittedDate', 'createdDate', 'updatedDate', 'paymentDate', 'surveyStatus', 'priority', 'installation', 'user', 'images', 'comments', 'estimationNumber', 'installationDate', 'gtgDate', 'sendDate', 'surveyLlHh', 'installer', 'propertyType', 'logs', 'paymentStatus', 'jobStatus');
    }
}